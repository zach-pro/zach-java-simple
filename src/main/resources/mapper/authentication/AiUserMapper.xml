<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sensor.modular.authentication.user.mapper.AiUserMapper">
    <select id="selectByName" resultType="com.sensor.modular.authentication.user.entity.AiUser">
        SELECT a.id,
               a.account,
               a.user_name,
               a.password,
               a.enabled,
               a.iphone,
               a.email,
               a.account_not_locked,
               a.corporate_name,
               a.purpose,
               a.create_user,
               a.create_time,
               a.last_login_time,
               ur.role_id as roleId
        FROM ai_user a LEFT JOIN ai_user_role_relation AS ur ON a.id = ur.user_id
        where a.account = #{userName}
    </select>

    <select id="selectListByUser" resultType="com.sensor.modular.authentication.permission.entity.AiPermission">
        SELECT p.id,
               p.permission_code,
               p.permission_name
        FROM ai_user AS u
                 LEFT JOIN ai_user_role_relation AS ur
                           ON u.id = ur.user_id
                 LEFT JOIN ai_role AS r
                           ON r.id = ur.role_id
                 LEFT JOIN ai_role_permission_relation AS rp
                           ON r.id = rp.role_id
                 LEFT JOIN ai_permission AS p
                           ON p.id = rp.permission_id
        WHERE u.id = #{userId}
    </select>

    <select id="selectUserList" resultType="com.sensor.modular.authentication.user.entity.AiUser">
        SELECT
        gu.id as id,
        gu.account as account,
        gu.user_name as userName,
        gu.password as password,
        gu.enabled as enabled,
        gu.iphone as iphone,
        gu.email as email,
        gu.account_not_locked as accountNotLocked,
        gu.corporate_name as corporateName,
        gu.purpose as purpose,
        gu.create_user as createUser,
        gu.create_time as createTime,
        gu.last_login_time as lastLoginTime,
        gr.id as roleid
        FROM
        ai_user as gu
        left join ai_user_role_relation as gurr on gu.id = gurr.user_id
        left join ai_role as gr on gurr.role_id = gr.id
        <where>
            1=1
            <if test="userName != null and userName != ''">
                AND gu.user_name = #{userName}
            </if>
            <if test="accountNotLocked != null and accountNotLocked != ''">
                AND gu.account_not_locked = #{accountNotLocked}
            </if>
            <if test="enabled != null and enabled != ''">
                AND gu.enabled = #{enabled}
            </if>
        </where>
    </select>
</mapper>
